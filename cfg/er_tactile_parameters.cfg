#!/usr/bin/env python
PACKAGE = "er_tactile"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

sensor1_parameters = gen.add_group("sensor1_parameters")
sensor1_parameters.add("a1", double_t, 0, "sensor1_a",    0.5, -5,   5)
sensor1_parameters.add("b1", double_t, 0, "sensor1_b",    0.0, 0.0,   3.3)
sensor1_parameters.add("c1", double_t, 0, "sensor1_c",    0.0, 0.0,   3.3)
sensor1_parameters.add("zero_v1", double_t, 0, "zero_weight voltage sensor1",    3.0, 0.0,   4095.0)

sensor2_parameters = gen.add_group("sensor2_parameters")
sensor2_parameters.add("a2", double_t, 0, "sensor2_a",    0.5, -5,   5)
sensor2_parameters.add("b2", double_t, 0, "sensor2_b",    0.0, 0.0,   3.3)
sensor2_parameters.add("c2", double_t, 0, "sensor2_c",    0.0, 0.0,   3.3)
sensor2_parameters.add("zero_v2", double_t, 0, "zero_weight voltage sensor2",   4.0, 0.0,   4095.0)

sensor3_parameters = gen.add_group("sensor3_parameters")
sensor3_parameters.add("a3", double_t, 0, "sensor3_a",    0.5, -5,   5)
sensor3_parameters.add("b3", double_t, 0, "sensor3_b",    0.0, 0.0,   3.3)
sensor3_parameters.add("c3", double_t, 0, "sensor3_c",    0.0, 0.0,   3.3)
sensor3_parameters.add("zero_v3", double_t, 0, "zero_weight voltage sensor3",   3.0, 0.0,   4095.0)

sensor4_parameters = gen.add_group("sensor4_parameters")
sensor4_parameters.add("a4", double_t, 0, "sensor4_a",    0.5, -5,   5)
sensor4_parameters.add("b4", double_t, 0, "sensor4_b",    0.0, 0.0,   3.3)
sensor4_parameters.add("c4", double_t, 0, "sensor4_c",    0.0, 0.0,   3.3)
sensor4_parameters.add("zero_v4", double_t, 0, "zero_weight voltage sensor4",    6.0, 0.0,   4095.0)

sensor5_parameters = gen.add_group("sensor5_parameters")
sensor5_parameters.add("a5", double_t, 0, "sensor5_a",    0.5, -5,   5)
sensor5_parameters.add("b5", double_t, 0, "sensor5_b",    0.0, 0.0,   3.3)
sensor5_parameters.add("c5", double_t, 0, "sensor5_c",    0.0, 0.0,   3.3)
sensor5_parameters.add("zero_v5", double_t, 0, "zero_weight voltage sensor5",    4.0, 0.0,   4095.0)

sensor6_parameters = gen.add_group("sensor6_parameters")
sensor6_parameters.add("a6", double_t, 0, "sensor6_a",    0.5, -5,   5)
sensor6_parameters.add("b6", double_t, 0, "sensor6_b",   0.0, 0.0,   3.3)
sensor6_parameters.add("c6", double_t, 0, "sensor6_c",   0.0, 0.0,   3.3)
sensor6_parameters.add("zero_v6", double_t, 0, "zero_weight voltage sensor6",    6.0, 0.0,   4095.0)

sensor7_parameters = gen.add_group("sensor7_parameters")
sensor7_parameters.add("a7", double_t, 0, "sensor7_a",   0.5, -5,   5)
sensor7_parameters.add("b7", double_t, 0, "sensor7_b",    0.0, 0.0,   3.3)
sensor7_parameters.add("c7", double_t, 0, "sensor7_c",    0.0, 0.0,   3.3)
sensor7_parameters.add("zero_v7", double_t, 0, "zero_weight voltage sensor7",    7.0, 0.0,   4095.0)

sensor8_parameters = gen.add_group("sensor8_parameters")
sensor8_parameters.add("a8", double_t, 0, "sensor8_a",   0.5, -5,   5)
sensor8_parameters.add("b8", double_t, 0, "sensor8_b",   0.0, 0.0,   3.3)
sensor8_parameters.add("c8", double_t, 0, "sensor8_c",   0.0, 0.0,   3.3)
sensor8_parameters.add("zero_v8", double_t, 0, "zero_weight voltage sensor8",    7.0, 0.0,   4095.0)

sensor9_parameters = gen.add_group("sensor9_parameters")
sensor9_parameters.add("a9", double_t, 0, "sensor9_a",    0.5, -5,   5)
sensor9_parameters.add("b9", double_t, 0, "sensor9_b",    0.0, 0.0,   3.3)
sensor9_parameters.add("c9", double_t, 0, "sensor9_c",    0.0, 0.0,   3.3)
sensor9_parameters.add("zero_v9", double_t, 0, "zero_weight voltage sensor9",    7.0, 0.0,   4095.0)

exit(gen.generate(PACKAGE, "er_tactile_sensor", "er_tactile_parameters"))



#gen.add("str_param",    str_t,    0, "A string parameter",  "Hello World")
#gen.add("bool_param",   bool_t,   0, "A Boolean parameter",  True)
#size_enum = gen.enum([ gen.const("Small",      int_t, 0, "A small constant"),
#                       gen.const("Medium",     int_t, 1, "A medium constant"),
#                       gen.const("Large",      int_t, 2, "A large constant"),
#                      gen.const("ExtraLarge", int_t, 3, "An extra large constant")],
#                     "An enum to set size")

#gen.add("size", int_t, 0, "A size parameter which is edited via an enum", 1, 0, 3, edit_method=size_enum)
